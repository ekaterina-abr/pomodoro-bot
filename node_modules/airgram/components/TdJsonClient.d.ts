import { TdObject } from '@airgram/core';
import { TdJsonConfig } from '../types';
declare type NativeTdObject = (TdObject & {
    '@extra': string;
    '@client_id': string;
}) | null;
declare type UpdateHandlerFn = (update: TdObject) => any;
export declare class TdJsonClient {
    readonly command: string;
    private readonly client;
    private readonly deserialize;
    private destroyed;
    private handleError;
    private readonly pending;
    private readonly serialize;
    private sleepPromise;
    private stack;
    private readonly timeout;
    private readonly updateHandlers;
    private wakeup;
    constructor({ command, models, timeout }: TdJsonConfig);
    addUpdateHandler(clientId: number, fn: UpdateHandlerFn): void;
    catch(handler: (error: Error) => void): void;
    create(): number;
    destroy(): void;
    execute(query: TdObject): NativeTdObject;
    pause(): void;
    removeUpdateHandler(clientId: number): void;
    resume(): void;
    send(clientId: number, id: string, request: TdObject, resolve: UpdateHandlerFn): void;
    private addToStack;
    private getClientHandlers;
    private getClientStack;
    private handleResponse;
    private handleUpdate;
    private loop;
    private onReceive;
    private parseResponse;
    private receive;
}
export {};
